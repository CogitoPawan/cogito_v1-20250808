import unittest
from app.services.anomaly_detection import AnomalyDetector
from app.models.sales_data import SalesData
from datetime import datetime

class AnomalyDetectionTestCase(unittest.TestCase):
    def setUp(self):
        self.anomaly_detector = AnomalyDetector(threshold=3.0)
        self.sales_data = [
            SalesData(id=1, timestamp=datetime(2023, 1, 1), sales=100.0),
            SalesData(id=2, timestamp=datetime(2023, 1, 8), sales=200.0),
            SalesData(id=3, timestamp=datetime(2023, 1, 15), sales=300.0),
            SalesData(id=4, timestamp=datetime(2023, 1, 22), sales=400.0),
            SalesData(id=5, timestamp=datetime(2023, 1, 29), sales=1000.0),  # This should be an anomaly
        ]

    def test_anomaly_detection(self):
        anomalies = self.anomaly_detector.detect(self.sales_data)
        self.assertEqual(len(anomalies), 1)
        self.assertEqual(anomalies[0].sales, 1000.0)

if __name__ == "__main__":
    unittest.main()